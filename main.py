import os
os.system("cls && title Checking.... && color b")
active = False
print("Welcome! Checking...")
if os.path.exists('insert_token.txt') == False:
  print("Insert the token to the file INSERT_TOKEN.txt\nAnd restart the programm")
  open('insert_token.txt', 'w')
  while True:
    a = 0
    a + 1
import random
import asyncio
import discord
import requests
from discord.ext import commands
client = commands.Bot(command_prefix = ";", help_command=None, self_bot = True)
guild  = client.get_guild(id)
my_array = ["–µ–±–ª–∞–Ω, ", "—É —Ç–≤–æ–µ–π –º–∞—Ç–µ—Ä–∏ —Ä–µ–±–µ–Ω–æ–∫", "–Ω–∞—Å–∫–æ–ª—å–∫–æ –∂–µ —Ç—ã", "—Ç—ã —É–Ω–∏–∂–µ–Ω–Ω—ã–π –∏ –ø–æ–ø—É—â–µ–Ω—ã–π", "—Å–ª—ã—à—å —Ç—ã –±–ª—è–¥—å, —É–µ–±–∞–Ω.", "—Å–ª–∏—Ç–æ–µ —É—Ä–æ–¥—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ", "c—ã–Ω –µ–±–ª–∞–Ω–∞ –æ—Ç–∑–æ–≤–∏—Å—å.", "–∞—É –±–ª—è–¥—å —É–µ–±–∏—â–µ.", "–±–ª—è–¥—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ ", "—É—â–µ—Ä–±–Ω—ã–π –Ω–∞—Å—Ç–æ–ª—å–∫–æ —á—Ç–æ —Ç–≤–æ–µ –ø—Ä–∏–∑–≤–∞–Ω–∏–µ", "–º–∞–º–æ–Ω—Ç –µ–±–∞–Ω—ã–π", "–ø—Ä–æ–≤–µ–¥–∏ —Å–µ–±–µ –≤—Å–∫—Ä—ã—Ç–∏–µ –Ω–∞—Ö—É–π, —Ç—ã", "—Ç—ã —Å–º–µ—à–Ω–æ–π, –¥–æ–ª–±–æ—è—â–µ—Ä", "–ß—Ç–æ —Ç—ã –Ω–µ—Å–µ—à—å –¥–æ–ª–±–∞–µ–±–∏—â–µ ", "–ê—É –±–ª—è–¥—å, ", "–î–æ—á–∫–∞ –ø—Ä–æ—à–º–∞–Ω–¥–æ–≤–∫–∏, "]
osk2 = [" —à–ª—é—Ö–∞,", " —Ö—É–∏—Å–æ—Å–∏—â–µ –µ–±–∞–Ω–Ω–æ–µ", " –ø–∏–¥–æ—Ä–∞—Å–Ω—è", " –∂–∏–≤–æ—Ç–Ω–æ–µ", " –º–∞–ª—å—á–∏–∫ –±–µ–∑ —Ö—É—è", " —Å–ø–∏–¥–æ–∑–Ω–∞—è –∑–∞–ª—É–ø–∞", " —É—â–µ—Ä–±–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ", " —Ö—É–µ–∂—É–π–∫–∞ –µ–±–∞–Ω–∞—è", " –æ—Ç–º–æ—Ä–æ–∂–µ–Ω–Ω—ã–π ", " –ø–æ–¥–∑–∞–ª—É–ø–Ω—ã–π —Ç–≤–æ—Ä–æ–∂–æ—á–µ–∫", " –¥–æ–ª–±–∞–µ–±–∏—á–µ—Å–∫–∞—è —Å–≤–∏–Ω—å—è", " —Å—ã–Ω —à–ª—é—Ö–∏", " —Ä–µ–±–µ–Ω–æ–∫ –¥–≤—É—Ö –ø–∏–¥–æ—Ä–∞—Å–æ–≤", " —Ç–µ—Ä–ø–∏–ª–æ–∏–¥ —á–∏—Å—Ç–æ", " —Å—ã–Ω –¥–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞", " —Å—ã–Ω –æ–≤—Ü—ã", " –¥–∏–ª–¥–æ—Å–æ—Å", " –ø–æ—Ä–Ω–æ–∞–∫—Ç–µ—Ä –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≥–µ–π –ø–æ—Ä–Ω–æ", " –æ–±—Å–æ—Å", " –ø–æ–¥—Å–æ—Å —Å–≤–æ–µ–≥–æ –±–∞—Ç–∏", " –∂–µ—Ä—Ç–≤–∞ –∞—É—Ç–∏–∑–º–∞", " –∞–±–æ—Ä—Ç—ã—à—å", "  –¥–∞—É–Ω —á–∏—Å—Ç–æ", " –Ω–µ–¥–æ—Ä–∞–∑–≤–∏—Ç–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ", " –µ–±—É—á–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏—Ä–æ–¥—ã", " –¥–∏—Ç—è –µ–±–∞–Ω–æ–µ", " –¥–æ–ª–±–∞–µ–±", " –æ—Ñ—Ñ–Ω–∏ —Å–≤–æ–π –µ–±–∞—Å–æ—Å", " –ø–æ–¥—Å–æ—Å –≤—Å–µ—Ö –∫—Ç–æ –º—É–∂—Å–∫–æ–≥–æ –ø–æ–ª–∞ –µ–±–∞—Ç—å", " —á–∏—Å—Ç–æ —É–µ–±–∏—â–µ –µ–±–∞–Ω–æ–µ –±–ª—è–¥—å", " –¥—ã—Ä—è–≤—ã–π –æ—Ç–º–æ—Ä–æ–∑–æ–∫", " —É —Ç–µ–±—è —á–µ—Ç—ã—Ä–µ —Ö—É—è –≤ –∂–æ–ø–µ, —Ö–≤–∞—Ç–∏—Ç", " —Å–∞–º–æ—É–Ω–∏–∂–∞–µ—Ç—Å—è —á–∏—Å—Ç–æ", "—á–∏—Å—Ç–æ —Ä–µ–±–µ–Ω–æ–∫ –≥–Ω–æ—è –±–ª—è–¥—å", " –∫–∞–∫–æ–≥–æ —Ö—É–∏ —Å–æ—Å–∞—Ç—å —É–µ–±–∞", " –≥–Ω–æ–π–Ω–∞—è —Ö—É–π–Ω—è", " —É—â–µ—Ä–±–Ω—ã–π –ø–æ–¥—Å–æ—Å –µ–±–∞—Ç—å –∞—Ö–∞—Ö–∞–∞", " –ø–æ—Ä–≤–∞–ª–æ —Ç–µ–±—è –¥–∞,"]
osk3 = [" –≥–∞–Ω–¥–æ–ø–ª—è—Å –µ–±–∞–Ω—ã–π", " —Å—ã–Ω –¥–∂–∞—Å—Ç–Ω–∞–Ω–∏–∫—Å–∞ –∏ –¥–æ—á—å –∏—Ç—Å–∫–µ–∫–æ—Ñ–∞ ", " –±–µ–∑–º–∞–º–Ω–æ–µ —á—É–¥–∏—â–µ", " —Å–ª–∏—Ç–æ–µ —É—Ä–æ–¥—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ", " –ø–µ—Ä–µ–µ–±–∞–Ω–Ω—ã–π –æ—Ç—Ü–∞–º–∏", " –±–æ–º–∂", ", –ø–æ–∑–æ–≤–∏ –º–∞—Ç—å –ø—Ä–æ—Å—Ç–∏—Ç—É—Ç–∫—É —É–µ–±–∏—â–µ", " –ø—Ä–æ —Ç–µ–±—è –ø—Ä–∏–Ω—è—Ç–æ –Ω–∞–∑—ã–≤–∞—Ç—å –∂–∏–≤–æ—Ç–Ω—ã–º, –ø–æ—Ç–æ–º—É-—á—Ç–æ —Ç—ã –æ—Ç—Å—Ç–∞–ª—ã–π –¥–æ–ª–±–∞–µ–± –Ω–∞—Ö—É–π,", " —Ö—É–π–ª–æ –µ–±–∞–Ω–Ω–æ–µ", " —É —Ç–µ–±—è –æ—á–∫–æ —Ä–∞—Å—Ç—è–Ω—É—Ç–æ –Ω–∞—Å—Ç–æ–ª—å–∫–æ, —á—Ç–æ —Ç—É–¥–∞ –≤–ª–µ–∑–∞–µ—Ç –µ–±–∞–Ω–Ω—ã–π –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä –Ω–∞—Ö—É–π", " —à–∞–ª–∞—à–æ–≤–∫–∞ –ø–∏–∑–¥–æ—á–µ—Å–∞–Ω–Ω–∞—è", " –µ–±—É—á–∏–π —Ö—É–µ–±–µ—Å", ",  —Ä–∞–∑—å–µ–±–∞–ª–∏ –±–µ–¥–Ω–æ–≥–æ –Ω–∞—Ö—É–π.", " —É—Ä–∫–æ–¥—Ä–æ—á–µ–Ω—ã–π –ø–∏–¥–æ—Ä–∞—Å –æ–∑–∞–±–æ—á–µ–Ω—ã—Ö –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä–æ–≤ –±–ª—è–¥—å. ", " –±–ª—è–¥–æ—Ç–∞", " –∫–ª–∏—Ç–æ—Ä–æ—Å–æ—Å –µ–±—É—á–∏–π",  " –ø–∏–¥–æ—Ä–∞—Å—Ç –∫–æ–Ω—á–µ–Ω—ã–π", " —Å—ã–Ω –∑–∞–ª—É–ø—ã", " —á–∏—Å—Ç–æ –º–∞–ª—å—á–∏–∫ –≥–µ–π –Ω–∞—Ö—É–π", " –≤—ã–µ–±–∏—Å—Ç—ã–π –ø—ë—Å", " –∏–¥–∏ –º–∞—Ç–µ—Ä–∏ –ø–æ–ø–ª–∞—á—å", " —Å–ø–µ—Ä–º–∞–≥–ª–æ—Ç –µ–±–∞–Ω—ã–π", " –ø–æ–¥—Å–æ—Å –±–æ–ª—å—à–∏—Ö —Ö—É–µ–≤", " –∏–¥–∏ –º–∞—Ç–µ—Ä–∏ –ø–æ–∂–∞–ª—É–π—Å—è —á—Ç–æ–ª–µ", " —Å—ã–Ω –∫—É–∫–æ–ª–¥–∞ –∏ –ø—Ä–æ—Å—Ç–∏—Ç—É—Ç–∫–∏", " —É —Ç–µ–±—è –≤ –æ—á–∫–µ —É–∂–µ –≤–∞–∑–µ–ª–∏–Ω–æ–≤—ã–µ –∂–µ–ª–µ–∑—ã –æ–±—Ä–∞–∑–æ–≤–∞–ª–∏—Å—å, —É–µ–±–∏—â–µ,",  " —Ç—ã –ø—Ä–∏ –≤–∏–¥–µ –ø–ª–µ—Ç–∫–∏ —Å—Ä–∞–∑—É —Ä–∞–∫–æ–º –≤—Å—Ç–∞–µ—à—å", " —Ö–≤–∞—Ç–∏—Ç –≤—ã—Å–∏—Ä–∞—Ç—å —Å–≤–æ—é —Ö—É–π–Ω—é,", " –¥–∏—Ç—è —á–µ—Ä–Ω–æ–±—ã–ª—è", " —Ö–≤–∞—Ç–∏—Ç –ø–∞—Å—Ç–∏—Ç—å —É–µ–±–æ–∫", " —Ö–≤–∞—Ç–∏—Ç –≤—ã–µ–±—ã–≤–∞—Ç—å—Å—è, —Ä–∞–±, –±–µ–∑ –µ–¥—ã –æ—Å—Ç–∞–Ω–µ—à—å—Å—è, –≥–∞–Ω–¥–æ–Ω", " —Ç—ã –ø—Ä–∏ –≤–∏–¥–µ –æ–º–µ–≥–æ —á–ª–µ–Ω–∞ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—à—å —Å–≤–æ–π —Ä–æ—Ç, –æ–º–µ–∂–∫–∞ –µ–±–∞–Ω–∞—è", " —Ç–≤–æ—é –º–∞—Ç—å –≤—ã–µ–±–∞–ª–∏ —Å–≤–∏–Ω—å–∏, –≤–∏–¥–∏—à—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç, —Ö—É–π–ª—É—à–∫–∞"]
osk4 = [". –í–æ–æ–±—â–µ –Ω–∞—Ö—É—è —Ç—ã —Ç–∞–∫ —Å –æ—Ç—Ü–æ–º —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–µ—à—å", ', —á–µ –∑–∞–º–æ–ª–∫ —Å—ã–Ω —á—É–¥–æ–≤–∏—â–∞', ". –Ø –±—ã —Ç–µ–±—è –æ—Ç–ø–∏–∑–¥–∏–ª, —Ö—É–µ—Å–æ—Å", ", —á–µ –º–æ–ª—á–∏–º", ", –¥–∞–≤–∞–π, –º–µ—Ç–Ω–∏ —Å—Ç—Ä–µ–ª–æ—á–∫—É, –ª—É—á–Ω–∏—Ü–∞ –µ–±–∞–Ω–∞—è", " –ø–æ–ø–∏–∑–¥–∏ –Ω–∞ –º–µ–Ω—è –µ—â–µ, —Ö—É–µ—Å–æ—Å–∫–∞ :)", " :heart:", " —Å—Ä–∞–∑—É —Ä–æ—Ç –ø—Ä–∏—Ä—ã–ª", " —Å —Ö—É—è–º–∏ –≤–æ —Ä—Ç—É –≥–æ–≤–æ—Ä–∏—Ç—å –Ω–µ –º–æ–∂–µ—à—å? –ü—Å–∏–Ω–∞", ", —á—Ç–æ –º–æ–ª—á–∏—à—å, –∂–µ—Ä—Ç–≤–∞ –¥–≤—É—Ö –æ–∑–∞–±–æ—á–µ–Ω—ã—Ö –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤ –∏ –±—É—Ç—ã–ª–∫–∏ –≤–æ–¥–∫–∏", ". –ò –≤–æ–æ–±—â–µ —Ç—ã –∂–µ—Ä—Ç–≤–∞ –∞–±–æ—Ä—Ç–∞", ". –î–∞–≤–∞–π, –≥–æ–ª–æ—Å, –ø—ë—Å.", ". –ß–µ –±–ª—è–¥—å, –ø–æ–≥–∞–≤–∫–∞–ª –∏ –≤—Å–µ?", "–º—ã —Ç–µ–±—è –ø–æ –∫—Ä—É–≥—É –ø—É—Å–∫–∞–ª–∏, —á–æ—Ä—Ç", ", —è —Ç–µ–±—è –ø–∞–ª–∫–æ–π —Ö—É—è—Ä–∏–ª", ", –º–∞—Ç—å —Ç–≤–æ—è –≤–∏–¥—è –º–æ–π –æ–≥—Ä–æ–º–Ω—ã–π —á–ª–µ–Ω —Ç–µ—á–µ—Ç, —É–µ–±–∏—â–µ", ". –¢–≤–æ—è –º–∞—Ç—å –ø–æ–¥ –º–æ–∏–º —Å—Ç–æ–ª–æ–º –∫—Å—Ç–∞—Ç–∏", ". –Ø —Ç–µ–±—è –µ–ª–¥–∞–∫–æ–º –ø–æ –≥–æ–ª–æ–≤–µ —É–µ–±–∞—à–∏–ª", ". –¢—ã - –æ–¥–Ω–æ–∫–ª–µ—Ç–æ—á–Ω–æ–µ —Å—É—â–µ—Å—Ç–≤–æ.", ". –ö—Ä–∏–Ω–∂–æ–≤—ã–π —Ö—É–µ–ø–ª–µ—Ç", ". –ó–∞–ø–æ–º–Ω–∏ –Ω–∞—Ö—É–π, —è - —Ç–≤–æ–π —Ö–æ–∑—è–∏–Ω, –∞ —Ç—ã —Å–µ–∫—Å-—Ä–∞–±—ã–Ω—è", " —Ö—É–ª–∏ —Ç—ã –º–Ω–µ —Å–æ—Å–∞—Ç—å –ø–µ—Ä–µ—Å—Ç–∞–ª, —è –Ω–µ —Ä–∞–∑—Ä–µ—à–∞–ª –Ω–∞—Ö—É–π", ", –∫—Å—Ç–∞—Ç–∏ —è —Ç–µ–±–µ –∫–æ–º–∞–Ω–¥—É –≥–æ–ª–æ—Å –Ω–µ –¥–∞–≤–∞–ª, —Ö—É–ª–∏ –ø–∏–∑–¥–∏—à—å —É–µ–±–∞", ". –Ø —Å–ª—ã—à–∞–ª —Ç–≤–æ—è –º–∞—Ç—å —ç–ª–∏—Ç–Ω–∞—è —à–ª—é—Ö–∞, –ø–æ–ø—Ä–æ—Å–∏ –µ–µ –∑–∞—Å–∫–æ—á–∏—Ç—å –∫–æ –º–Ω–µ, –¥–∞–≤–Ω–æ –Ω–µ –µ–±–∞–ª–∏—Å—å", ", —è —Ç–≤–æ–µ–º—É –±–∞—Ç–µ —à—É—Ä—É–ø –≤ –≥–æ–ª–æ–≤—É –∑–∞–∫—Ä—É—Ç–∏–ª", ", —è –∏–∑ –≤–æ–ª–æ—Å —Ç–≤–æ–µ–π –∂–∏—Ä–Ω–æ–π –º–∞–º–∞—à–∏ —Å–∞–º–æ–∫—Ä—É—Ç–∫—É —Å–¥–µ–ª–∞–ª", ", –¥–æ—á–∫–∞ –¥–≤—É—Ö –∏–Ω–≤–∞–ª–∏–¥–æ–≤ –æ—Ä—É"]
ban_answers = ["–î–∞", "–ù–µ—Ç", "–•–æ-—Ö–æ-—Ö–æ"]
ball_answers = ["–ù–µ–∑–Ω–∞—é", "–í–æ–∑–º–æ–∂–Ω–æ", "–î–∞", "–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –¥–∞, —á–µ–º –Ω–µ—Ç", "–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω–µ—Ç", "–°–ø—Ä–æ—Å–∏ –µ—â–µ —Ä–∞–∑–æ–∫"]
@client.event
async def on_ready():
    print("Loading...")
    os.system("cls && color c")
    await asyncio.sleep(0.2)
    os.system("title A\ ")
    await asyncio.sleep(0.3)
    os.system("title Ar\ ")
    await asyncio.sleep(0.2)
    os.system("title Are\ ")
    await asyncio.sleep(0.2)
    os.system("title Ares\ ")
    await asyncio.sleep(0.3)
    os.system("title Arese\ ")
    await asyncio.sleep(0.2)
    os.system("title Aresel\ ")
    await asyncio.sleep(0.2)
    os.system("title Areself\ ")
    await asyncio.sleep(0.2)
    os.system("title Areself \ ")
    await asyncio.sleep(0.2)
    os.system("title Areself / v0.2 \ SelfBot")
    os.system("color c")
    print("""
                              ___    ____  ___________ ________    ______
                             /   |  / __ \/ ____/ ___// ____/ /   / ____/     Developed by Know
                            / /| | / /_/ / __/  \__ \/ __/ / /   / /_         with love <3
                           / ___ |/ _, _/ /___ ___/ / /___/ /___/ __/    
                          /_/  |_/_/ |_/_____//____/_____/_____/_/            areself.ml
                                      **  Version : 1.0  **
                                        """)
################ S  E  T  T  I  N  G S #######################
token = open('insert_token.txt', 'r').readline()
################ B  U  L  L  I  N  G  ########################
active = True
@client.command()
async def bull_start(ctx):
    await ctx.message.delete()
    for active in False:
        await ctx.send(random.choice(my_array) + random.choice(osk2) + random.choice(osk3) + random.choice(osk3) + random.choice(osk4))
        print("LOG: Bullying sended!")
        asyncio.sleep(2)

@client.command()
async def bull_off(ctx):
    await ctx.message.delete()
    print("LOG: Bulling stopped")
    active = False
################ F  U  N  ########################
@client.command()
async def ben(ctx, *, question):
    await ctx.message.delete()
    ban_answer = random.choice(ban_answers)
    await ctx.send(f"""
```ansi
[2;37m–í—ã –∑–∞–¥–∞–ª–∏ –≤–æ–ø—Ä–æ—Å –±—ç–Ω—É:[0m
[2;34m{question}

[2;37m–û—Ç–≤–µ—Ç –ë—ç–Ω–∞:[0m[2;34m
{ban_answer}
[0m
```
""")
@client.command()
async def ball(ctx, *, question):
    await ctx.message.delete()
    ball_answer = random.choice(ball_answers)
    await ctx.send(f"""
```ansi
[2;37m–í—ã –∑–∞–¥–∞–ª–∏ –≤–æ–ø—Ä–æ—Å –∏ –ø–æ—Ç—Ä—è—Å–ª–∏ —à–∞—Ä:[0m
[2;34m{question}

[2;37m–ù–∞ —à–∞—Ä–µ –Ω–∞–ø–∏—Å–∞–Ω–æ:[0m[2;34m
{ball_answer}
[0m
```
""")
@client.command()
async def say(ctx, settings, *, message):
    await ctx.message.delete()
    if settings != "random" or "not":
      print("READ: Say has 2 types. 1 - random (;say random example > example [99999]) or not (just message).")
    if settings == "random":
      await ctx.send(message + " [" + str(random.randint(9999,99999)) + "]")
    if settings == "not":
      await ctx.send(message)
################ A  B  U  S  E  ########################
@client.command()
async def delchannels(ctx):
   print("LOG: Deleting all channels on server")
   await ctx.message.delete()
   for channel in ctx.guild.channels: # iterating through each guild channel
      await channel.delete()
      print("LOG: Deleted Channel.\n" + "     Channel Name: " + str(channel))
@client.command()
async def spam(ctx, number, *, text):
   await ctx.message.delete()
   print("LOG: Started spaming...")
   for channel in ctx.guild.channels: # iterating through each guild channel
     for i in range(int(number)):
       await ctx.send(str(text) + " [" + str(random.randint(1000,9999)) + "]")
       print("LOG: Spam sended")
       asyncio.sleep(1)
##################  H  E  L  P ###################
@client.command()
async def help(ctx):
  await ctx.message.delete()
  await ctx.send("""```ansi
[2;33m‚ï≠üòà‚ïÆ[0m  [2;31mùô∞  ùöÅ  ùô¥  ùöÇ  ùô¥  ùôª  ùôµ[0m
[2;31m‚ï∞üëø‚ïØ[0m [2;33m ùôø  ùöÅ  ùô¥  ùôº  ùô∏  ùöÑ  ùôº
[0m
[2;30m    -  Prefix:[0m [1;2m[1;31m;
[0m[0m[2;30m    -  Developed by:[0m [1;2m[1;31mKnow#4463[0m[0m

[2;31m[ ü§¨ ][0m    [2;31m ùô±  ùöÑ  ùôª  ùôª  ùô∏  ùôΩ  ùô∂[0m
[2;30m[  +  ][0m      [2;34m< bull_start >[0m | [2;32mStart bulling[0m
[2;30m[  +  ] [0m     [2;34m< bull_off >[0m | [2;31mOff bulling

[  ‚ùó  ]      ùô∞  ùô±  ùöÑ  ùöÇ  ùô¥
[2;30m[  +  ] [0m[2;31m     [0m[2;34m< spam [2;42m[2;41m[2;40m[2;36m<x>[0m[2;34m[2;40m[0m[2;34m[2;41m[0m[2;34m[2;42m[0m[2;34m [2;40m[2;30m[0m[2;34m[2;40m[0m[2;34m[2;36m[2;40m<text>[0m[2;36m [0m[2;34m>[0m | [2;31mSpam [2;33mx[0m[2;31m messages
[0m[2;30m[  +  ] [0m     [2;34m< delchannels >[0m | [2;31mDelete [2;34mall channels[0m[2;31m on the server
[0m[2;30m[  +  ] [0m     [2;34m< nuke >[0m | [2;31mCrash discord server
[0m[2;30m[  +  ] [0m     [2;34m< token_nuke >[0m | [2;31m!!![0m [2;31mKill this account !!!
[0m
[2;31m[  ‚ùó  ]      ùôµ  ùöÑ  ùôΩ
[0m[2;30m[  +  ] [0m     [2;34m< ben [2;40m[2;36m<text>[0m[2;34m[2;40m[0m[2;34m >[0m | [2;31mCall to ban
[0m[2;30m[  +  ] [0m     [2;34m< ball [2;40m[2;36m<text[0m[2;34m[2;40m[0m[2;34m[2;40m>[0m[2;34m[0m [2;34m>[0m | [2;31m8ball[0m
[0m[2;30m[  +  ] [0m     [2;34m< say [2;40m[2;36m<random/not> [2;40m[2;36m<text>[0m[2;34m[2;40m[0m[2;34m >[0m | [2;31mSay

```""")
##error fix##
@client.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.CommandNotFound ):
        print("LOG: Command not exist!")
        await ctx.message.delete()


client.run(token, bot = False) #mammoth's token
